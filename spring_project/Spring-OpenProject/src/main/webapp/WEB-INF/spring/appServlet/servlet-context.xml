<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/fileupload/**" location="/fileupload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- fileUpload를 위한 multiPartResolver 등록 -->
	<beans:bean id="multipartResolver"
	            class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	            p:defaultEncoding ="utf-8"
	            p:maxUploadSize="999999999"
	 />
	 
	 <!-- 인터셉터 등록 : Login체크 -->
	 <interceptors>
	  <interceptor>
	   <mapping path="/mypage/**"/>
	   <beans:bean class="com.aia.op.member.interceptor.AuthCheckInterceptor"/>
	  </interceptor>
	 </interceptors> 
	 
	 <beans:bean id="mailSender"
	       class="org.springframework.mail.javamail.JavaMailSenderImpl"
	
	> 
	<beans:property name="host" value="smtp.gmail.com"/>
	<beans:property name="port" value="587"/>
	<beans:property name="username" value="weather.test234@gmail.com"/>
	<beans:property name="password" value="1234@@00"/>
	<beans:property name="defaultEncoding" value="utf-8"/>
	<beans:property name="javaMailProperties">
	<beans:props>
	 <beans:prop key="mail.transport.protocol">smtp</beans:prop>
	 <beans:prop key="mail.smtp.auth">true</beans:prop>
	 <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
	 <beans:prop key="mail.debug">true</beans:prop>
	</beans:props>
	</beans:property>
	</beans:bean>
	
	<beans:bean id="templateMessage"
	           class="org.springframework.mail.SimpleMailMessage"
	           p:subject="회원 가입 축하"
	           p:text="회원가입을 위해서는 아래 링크를 클릭해 주세요"
	           />
	           
	           	 <!-- Redis -->
	<beans:bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
							p:usePool="true"
							p:hostName="localhost"
							p:port="6379"	
	/>
	<beans:bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
							p:connectionFactory-ref="jedisConnFactory"
	/>
	           
	           <!-- @Transactional 애노테이션 활성화 설정 -->
<!--    <tx:annotation-driven /> -->
   <tx:annotation-driven
      transaction-manager="transactionManager" />
	           
	           
	<context:component-scan base-package="com.aia.op" />
	
	
	
</beans:beans>
